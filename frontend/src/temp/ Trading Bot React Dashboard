# üöÄ Trading Bot React Dashboard

–ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –≤–µ–±-–ø–∞–Ω–µ–ª–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞.

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
trading-bot-frontend/
‚îú‚îÄ‚îÄ public/
‚îÇ   ‚îú‚îÄ‚îÄ index.html
‚îÇ   ‚îú‚îÄ‚îÄ favicon.ico
‚îÇ   ‚îî‚îÄ‚îÄ manifest.json
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ TradingBotUI.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ TradingAnalytics.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ PortfolioManagement.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ StrategyBuilder.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ TradingLogs.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Notifications.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ BotSettings.tsx
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ common/
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ LoadingSpinner.tsx
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ ErrorMessage.tsx
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ Modal.tsx
‚îÇ   ‚îú‚îÄ‚îÄ services/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ api.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ websocket.ts
‚îÇ   ‚îú‚îÄ‚îÄ hooks/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ useApi.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ useBotStatus.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ useWebSocket.ts
‚îÇ   ‚îú‚îÄ‚îÄ types/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ trading.ts
‚îÇ   ‚îú‚îÄ‚îÄ utils/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ constants.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ formatters.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ helpers.ts
‚îÇ   ‚îú‚îÄ‚îÄ styles/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ globals.css
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ components.css
‚îÇ   ‚îú‚îÄ‚îÄ App.tsx
‚îÇ   ‚îú‚îÄ‚îÄ index.tsx
‚îÇ   ‚îî‚îÄ‚îÄ react-app-env.d.ts
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ tailwind.config.js
‚îú‚îÄ‚îÄ tsconfig.json
‚îú‚îÄ‚îÄ .env.example
‚îú‚îÄ‚îÄ .env
‚îú‚îÄ‚îÄ .gitignore
‚îî‚îÄ‚îÄ README.md
```

## üì¶ package.json

```json
{
  "name": "trading-bot-dashboard",
  "version": "2.0.0",
  "description": "React dashboard for cryptocurrency trading bot",
  "private": true,
  "dependencies": {
    "@types/node": "^16.18.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "lucide-react": "^0.263.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1",
    "recharts": "^2.8.0",
    "typescript": "^4.9.0",
    "web-vitals": "^2.1.0"
  },
  "devDependencies": {
    "@tailwindcss/forms": "^0.5.0",
    "autoprefixer": "^10.4.0",
    "postcss": "^8.4.0",
    "tailwindcss": "^3.3.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "lint": "eslint src --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "proxy": "http://localhost:8000"
}
```

## üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã

### tailwind.config.js
```javascript
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        gray: {
          900: '#111827',
          800: '#1f2937',
          700: '#374151',
          600: '#4b5563',
          500: '#6b7280',
          400: '#9ca3af',
          300: '#d1d5db',
        }
      },
      animation: {
        'spin': 'spin 1s linear infinite',
        'pulse': 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',
      }
    },
  },
  plugins: [
    require('@tailwindcss/forms'),
  ],
}
```

### tsconfig.json
```json
{
  "compilerOptions": {
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "baseUrl": "src",
    "paths": {
      "@/*": ["*"],
      "@/components/*": ["components/*"],
      "@/services/*": ["services/*"],
      "@/hooks/*": ["hooks/*"],
      "@/types/*": ["types/*"],
      "@/utils/*": ["utils/*"]
    }
  },
  "include": [
    "src"
  ]
}
```

### .env.example
```env
# API Configuration
REACT_APP_API_URL=http://localhost:8000
REACT_APP_WS_URL=ws://localhost:8001

# Application Settings
REACT_APP_NAME=Trading Bot Dashboard
REACT_APP_VERSION=2.0.0

# Development
REACT_APP_DEBUG=true
REACT_APP_LOG_LEVEL=debug

# Optional: API Key for client-side requests (if needed)
REACT_APP_API_KEY=your_api_key_here
```

## üöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ

### 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
```bash
npx create-react-app trading-bot-dashboard --template typescript
cd trading-bot-dashboard
```

### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
```bash
# –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
npm install lucide-react recharts

# Tailwind CSS
npm install -D tailwindcss postcss autoprefixer @tailwindcss/forms
npx tailwindcss init -p
```

### 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Tailwind CSS

–î–æ–±–∞–≤—å—Ç–µ –≤ `src/index.css`:
```css
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom styles */
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #111827;
  color: white;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* Scrollbar styles */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: #374151;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: #6b7280;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

/* Loading animation */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.fade-in {
  animation: fadeIn 0.5s ease-out;
}

/* Charts responsiveness */
.recharts-responsive-container {
  width: 100% !important;
  height: 100% !important;
}
```

### 4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤

**public/index.html**
```html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="Trading Bot Dashboard - Monitor and manage your cryptocurrency trading bot" />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <title>Trading Bot Dashboard</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>
```

**src/index.tsx**
```typescript
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(
  document.getElementById('root') as HTMLElement
);

root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
```

## üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞

```bash
# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
npm start

# –°–±–æ—Ä–∫–∞
npm run build

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
npm test

# –õ–∏–Ω—Ç–∏–Ω–≥
npm run lint
npm run lint:fix
```

## üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FastAPI

–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à FastAPI —Å–µ—Ä–≤–µ—Ä:

1. **–ó–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000**
2. **–ò–º–µ–µ—Ç CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**
```python
from fastapi.middleware.cors import CORSMiddleware

app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://localhost:3000"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
```

3. **–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω—É–∂–Ω—ã–µ endpoints:**
- `GET /api/bot/status`
- `POST /api/bot/toggle`
- `GET /api/symbols`
- `GET /api/orders`
- `GET /api/balance`
- –ò –¥—Ä—É–≥–∏–µ...

## üìä –§—É–Ω–∫—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞

- ‚úÖ **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç–∞** - —Å—Ç–∞—Ç—É—Å, –ø—Ä–∏–±—ã–ª—å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫
- ‚úÖ **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞** - –≥—Ä–∞—Ñ–∏–∫–∏ P&L, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
- ‚úÖ **–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ** - –±–∞–ª–∞–Ω—Å, –ø–æ–∑–∏—Ü–∏–∏, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–æ–≤
- ‚úÖ **–°—Ç—Ä–∞—Ç–µ–≥–∏–∏** - —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏
- ‚úÖ **–õ–æ–≥–∏** - –∏—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
- ‚úÖ **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è** - –∞–ª–µ—Ä—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
- ‚úÖ **–ù–∞—Å—Ç—Ä–æ–π–∫–∏** - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –∏ API

## üé® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ UI

- **–¢–µ–º–Ω–∞—è —Ç–µ–º–∞** –≤ —Å—Ç–∏–ª–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
- **Responsive –¥–∏–∑–∞–π–Ω** –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
- **Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è** —á–µ—Ä–µ–∑ WebSocket
- **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã** —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
- **–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è** —Å –±–æ–∫–æ–≤—ã–º –º–µ–Ω—é
- **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏** —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π

## üîÑ –î–µ–ø–ª–æ–π

### Development
```bash
npm start
# –û—Ç–∫—Ä–æ–µ—Ç—Å—è http://localhost:3000
```

### Production
```bash
npm run build
# –§–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ build/ –≥–æ—Ç–æ–≤—ã –¥–ª—è –¥–µ–ø–ª–æ—è
```

### Docker
```dockerfile
FROM node:18-alpine as builder
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production
COPY . .
RUN npm run build

FROM nginx:alpine
COPY --from=builder /app/build /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
```

## üéØ –ì–æ—Ç–æ–≤–æ!

–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —à–∞–≥–æ–≤ —É –≤–∞—Å –±—É–¥–µ—Ç:
- ‚úÖ –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è React –ø–∞–Ω–µ–ª—å
- ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FastAPI backend
- ‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π
- ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º
- ‚úÖ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ production –¥–µ–ø–ª–æ—é

–ó–∞–ø—É—Å—Ç–∏—Ç–µ `npm start` –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Å–≤–æ–∏–º —Ç–æ—Ä–≥–æ–≤—ã–º –¥–∞—à–±–æ—Ä–¥–æ–º! üöÄ