# üöÄ Trading Bot UI - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

–°–æ–∑–¥–∞–π—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ –≤–∞—à–µ–º React –ø—Ä–æ–µ–∫—Ç–µ:

```
src/
‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îú‚îÄ‚îÄ TradingBotUI.tsx         # –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç UI
‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ api/
‚îÇ   ‚îî‚îÄ‚îÄ service.ts               # API —Å–µ—Ä–≤–∏—Å –¥–ª—è FastAPI
‚îú‚îÄ‚îÄ types/
‚îÇ   ‚îî‚îÄ‚îÄ trading.ts               # TypeScript —Ç–∏–ø—ã
‚îú‚îÄ‚îÄ utils/
‚îÇ   ‚îî‚îÄ‚îÄ constants.ts             # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
‚îî‚îÄ‚îÄ App.tsx
```

## üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

```bash
npm install lucide-react
# –∏–ª–∏
yarn add lucide-react
```

## üìã FastAPI Endpoints (–∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≤–∞—à–µ–º backend)

–í–∞—à FastAPI —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ endpoints:

### Bot Management
```python
# main.py –∏–ª–∏ bot_router.py
from fastapi import APIRouter

router = APIRouter(prefix="/api/bot", tags=["bot"])

@router.get("/status")
async def get_bot_status():
    return {
        "isRunning": True,
        "totalProfit": 1234.56,
        "totalTrades": 142,
        "winRate": 68.3,
        "lastUpdate": "2025-05-29T12:00:00Z"
    }

@router.post("/start")
async def start_bot():
    # –õ–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    return {"message": "Bot started successfully"}

@router.post("/stop")
async def stop_bot():
    # –õ–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
    return {"message": "Bot stopped successfully"}

@router.post("/toggle")
async def toggle_bot():
    # –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
    return {"message": "Bot status toggled"}
```

### Symbols Management
```python
@router.get("/api/symbols")
async def get_symbols():
    return [
        {
            "symbol": "BTCUSDT",
            "price": "43245.67",
            "change": "+2.34%",
            "volume": "1234.56",
            "status": "active",
            "profit": "+$234.56",
            "trades": 12
        }
        # ... –±–æ–ª—å—à–µ —Å–∏–º–≤–æ–ª–æ–≤
    ]

@router.post("/api/symbols/{symbol}/toggle")
async def toggle_symbol(symbol: str):
    # –õ–æ–≥–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏ —Å–∏–º–≤–æ–ª–æ–º
    return {"message": f"Symbol {symbol} toggled"}

@router.get("/api/symbols/{symbol}/price")
async def get_symbol_price(symbol: str):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã —Å–∏–º–≤–æ–ª–∞
    return {"price": "43245.67"}
```

### Orders Management
```python
@router.get("/api/orders")
async def get_orders(symbol: str = None, limit: int = 50):
    return [
        {
            "id": "1",
            "symbol": "BTCUSDT",
            "side": "BUY",
            "type": "LIMIT",
            "amount": "0.023",
            "price": "43200.00",
            "status": "FILLED",
            "time": "2025-05-29 12:34:56"
        }
        # ... –±–æ–ª—å—à–µ –æ—Ä–¥–µ—Ä–æ–≤
    ]

@router.delete("/api/orders/{order_id}/cancel")
async def cancel_order(order_id: str):
    # –õ–æ–≥–∏–∫–∞ –æ—Ç–º–µ–Ω—ã –æ—Ä–¥–µ—Ä–∞
    return {"message": f"Order {order_id} cancelled"}
```

### Account & Balance
```python
@router.get("/api/account/balance")
async def get_balance():
    return [
        {
            "asset": "USDT",
            "free": "1234.56",
            "locked": "234.56"
        },
        {
            "asset": "BTC",
            "free": "0.12345678",
            "locked": "0.00123456"
        }
        # ... –±–æ–ª—å—à–µ –∞–∫—Ç–∏–≤–æ–≤
    ]

@router.get("/api/stats")
async def get_stats():
    return {
        "totalProfit": 1234.56,
        "totalTrades": 142,
        "winRate": 68.3,
        "dailyPnL": 45.67,
        "weeklyPnL": 234.56,
        "monthlyPnL": 1234.56
    }
```

### Health Check
```python
@router.get("/health")
async def health_check():
    return {"status": "healthy"}
```

## üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ –≤–∞—à–µ–≥–æ React –ø—Ä–æ–µ–∫—Ç–∞:

```env
REACT_APP_API_URL=http://localhost:8000
REACT_APP_WS_URL=ws://localhost:8001
```

## üìù TypeScript —Ç–∏–ø—ã

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `src/types/trading.ts`:

```typescript
export interface BotStatus {
  isRunning: boolean;
  totalProfit: number;
  totalTrades: number;
  winRate: number;
  lastUpdate: string;
}

export interface Symbol {
  symbol: string;
  price: string;
  change: string;
  volume: string;
  status: 'active' | 'inactive';
  profit: string;
  trades: number;
}

export interface Order {
  id: string;
  symbol: string;
  side: 'BUY' | 'SELL';
  type: string;
  amount: string;
  price: string;
  status: string;
  time: string;
}

export interface Balance {
  asset: string;
  free: string;
  locked: string;
}

export interface ApiResponse<T> {
  success: boolean;
  data?: T;
  error?: string;
}
```

## üöÄ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ App.tsx

```typescript
import React from 'react';
import TradingBotUI from './components/TradingBotUI';
import './App.css';

function App() {
  return (
    <div className="App">
      <TradingBotUI />
    </div>
  );
}

export default App;
```

## üé® CSS —Å—Ç–∏–ª–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–µ Tailwind)

–ï—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Tailwind CSS, –¥–æ–±–∞–≤—å—Ç–µ –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –≤ `src/App.css`:

```css
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
  background-color: #111827;
  color: white;
}

.App {
  min-height: 100vh;
}

/* –£—Ç–∏–ª–∏—Ç–∏ –∫–ª–∞—Å—Å—ã –¥–ª—è –∑–∞–º–µ–Ω—ã Tailwind */
.bg-gray-900 { background-color: #111827; }
.bg-gray-800 { background-color: #1f2937; }
.bg-gray-700 { background-color: #374151; }
.text-white { color: white; }
.text-gray-400 { color: #9ca3af; }
.border-gray-700 { border-color: #374151; }
/* ... –¥–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —Å—Ç–∏–ª–µ–π –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ */
```

## üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–∞—à–∏–º WebSocket (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π WebSocket provider:

```typescript
// –í TradingBotUI.tsx –∑–∞–º–µ–Ω–∏—Ç–µ mock –¥–∞–Ω–Ω—ã–µ –Ω–∞:
import { useWebSocket } from '../websocket/WebSocketClient';

const TradingBotUI = () => {
  const { state } = useWebSocket();

  // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ WebSocket
  const botStatus = {
    isRunning: state.isConnected,
    // ... –¥—Ä—É–≥–∏–µ –ø–æ–ª—è –∏–∑ WebSocket —Å–æ—Å—Ç–æ—è–Ω–∏—è
  };

  // ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
};
```

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

1. **–ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–∞—à FastAPI —Å–µ—Ä–≤–µ—Ä:**
   ```bash
   uvicorn main:app --reload --port 8000
   ```

2. **–ó–∞–ø—É—Å—Ç–∏—Ç–µ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:**
   ```bash
   npm start
   ```

3. **–û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä:**
   ```
   http://localhost:3000
   ```

## üîç –û—Ç–ª–∞–¥–∫–∞

### –ï—Å–ª–∏ UI –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è:
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ FastAPI —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

### –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è:
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Network tab –≤ Developer Tools
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API endpoints –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ FastAPI

### FastAPI CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∞:
```python
from fastapi.middleware.cors import CORSMiddleware

app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://localhost:3000"],  # React dev server
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
```

## üì¶ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞

1. **–°–±–æ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:**
   ```bash
   npm run build
   ```

2. **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤:**
   ```nginx
   server {
       listen 80;
       server_name your-domain.com;

       location / {
           root /path/to/build;
           try_files $uri $uri/ /index.html;
       }

       location /api/ {
           proxy_pass http://localhost:8000;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
       }
   }
   ```

## üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

- **–¢–µ–º–Ω–∞—è —Ç–µ–º–∞** –≤ —Å—Ç–∏–ª–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
- **Responsive –¥–∏–∑–∞–π–Ω** –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
- **Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è** —á–µ—Ä–µ–∑ API polling
- **–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å—Ç–∞—Ç—É—Å–∞** –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏
- **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫** —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–≤—Ç–æ—Ä–∞
- **–ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è** –±–æ—Ç–æ–º –∏ —Å–∏–º–≤–æ–ª–∞–º–∏
- **–¢–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã—Ö** —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π

## üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

–í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:
- –î–æ–±–∞–≤—å—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∫ API endpoints
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS
- –í–∞–ª–∏–¥–∏—Ä—É–π—Ç–µ –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ
- –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ CORS origins
- –î–æ–±–∞–≤—å—Ç–µ rate limiting

## üöÄ –ì–æ—Ç–æ–≤–æ!

–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —à–∞–≥–æ–≤ —É –≤–∞—Å –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞, –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –∫ –≤–∞—à–µ–º—É FastAPI backend!